// <auto-generated />
using ch.wuerth.tobias.mux.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ch.wuerth.tobias.mux.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180430181242_20180430T2012")]
    partial class _20180430T2012
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.AcoustId", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("UniqueId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("AcoustId");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.AcoustIdResult", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AcoustId_UniqueId")
                        .IsRequired();

                    b.Property<double>("Score");

                    b.Property<int?>("Track_UniqueId")
                        .IsRequired();

                    b.HasKey("UniqueId");

                    b.HasIndex("AcoustId_UniqueId");

                    b.HasIndex("Track_UniqueId");

                    b.ToTable("AcoustIdResult");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.Invite", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("CreateUserUniqueId");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.HasKey("UniqueId");

                    b.HasIndex("CreateUserUniqueId");

                    b.ToTable("Invite");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzAlias", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Begin")
                        .HasMaxLength(1024);

                    b.Property<string>("End")
                        .HasMaxLength(1024);

                    b.Property<bool>("Ended");

                    b.Property<string>("Locale")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .HasMaxLength(1024);

                    b.Property<string>("Primary")
                        .HasMaxLength(1024);

                    b.Property<string>("ShortName")
                        .HasMaxLength(1024);

                    b.Property<string>("Type")
                        .HasMaxLength(1024);

                    b.Property<string>("TypeId")
                        .HasMaxLength(1024);

                    b.Property<string>("UniqueHash")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("UniqueId");

                    b.HasIndex("Name");

                    b.HasIndex("UniqueHash")
                        .IsUnique();

                    b.ToTable("MusicBrainzAlias");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzArea", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Disambiguation")
                        .HasMaxLength(4096);

                    b.Property<string>("Id")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .HasMaxLength(1024);

                    b.Property<string>("SortName")
                        .HasMaxLength(1024);

                    b.HasKey("UniqueId");

                    b.ToTable("MusicBrainzArea");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzArtist", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Disambiguation")
                        .HasMaxLength(4096);

                    b.Property<string>("Name")
                        .HasMaxLength(1024);

                    b.Property<string>("SortName")
                        .HasMaxLength(1024);

                    b.Property<string>("UniqueHash")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("UniqueId");

                    b.ToTable("MusicBrainzArtist");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzArtistCredit", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Artist_UniqueId")
                        .IsRequired();

                    b.Property<string>("Joinphrase")
                        .HasMaxLength(4096);

                    b.Property<string>("Name")
                        .HasMaxLength(1024);

                    b.Property<string>("UniqueHash")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("UniqueId");

                    b.HasIndex("Artist_UniqueId");

                    b.HasIndex("Name");

                    b.HasIndex("UniqueHash")
                        .IsUnique();

                    b.ToTable("MusicBrainzArtistCredit");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzIsoCode", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(3);

                    b.HasKey("UniqueId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("MusicBrainzIsoCode");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzRecord", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Disambiguation")
                        .HasMaxLength(4096);

                    b.Property<DateTime?>("LastMusicBrainzApiCall");

                    b.Property<int?>("Length");

                    b.Property<string>("MusicBrainzApiCallError");

                    b.Property<string>("MusicbrainzId")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Title")
                        .HasMaxLength(1024);

                    b.Property<bool?>("Video");

                    b.HasKey("UniqueId");

                    b.HasIndex("MusicbrainzId")
                        .IsUnique();

                    b.HasIndex("Title");

                    b.ToTable("MusicBrainzRecord");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzRelease", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Barcode")
                        .HasMaxLength(1024);

                    b.Property<string>("Country")
                        .HasMaxLength(1024);

                    b.Property<DateTime?>("Date");

                    b.Property<string>("Disambiguation")
                        .HasMaxLength(1024);

                    b.Property<string>("Id")
                        .HasMaxLength(1024);

                    b.Property<string>("PackagingId")
                        .HasMaxLength(1024);

                    b.Property<string>("Quality")
                        .HasMaxLength(1024);

                    b.Property<string>("Status")
                        .HasMaxLength(1024);

                    b.Property<string>("StatusId")
                        .HasMaxLength(1024);

                    b.Property<int?>("TextRepresentation_UniqueId");

                    b.Property<string>("Title")
                        .HasMaxLength(1024);

                    b.Property<string>("UniqueHash")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("UniqueId");

                    b.HasIndex("TextRepresentation_UniqueId");

                    b.HasIndex("Title");

                    b.HasIndex("UniqueHash")
                        .IsUnique();

                    b.ToTable("MusicBrainzRelease");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzReleaseEvent", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Area_UniqueId");

                    b.Property<DateTime?>("Date");

                    b.Property<string>("UniqueHash")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("UniqueId");

                    b.HasIndex("Area_UniqueId");

                    b.HasIndex("UniqueHash")
                        .IsUnique();

                    b.ToTable("MusicBrainzReleaseEvent");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzTag", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<string>("Name")
                        .HasMaxLength(4096);

                    b.Property<string>("UniqueHash")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("UniqueId");

                    b.HasIndex("UniqueHash")
                        .IsUnique();

                    b.ToTable("MusicBrainzTag");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzTextRepresentation", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Language")
                        .HasMaxLength(1024);

                    b.Property<string>("Script")
                        .HasMaxLength(1024);

                    b.Property<string>("UniqueHash")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("UniqueId");

                    b.HasIndex("UniqueHash")
                        .IsUnique();

                    b.ToTable("MusicBrainzTextRepresentation");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.Playlist", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreateUserUniqueId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("UniqueId");

                    b.HasIndex("CreateUserUniqueId");

                    b.ToTable("Playlist");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.PlaylistEntry", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreateUserUniqueId");

                    b.Property<int>("PlaylistUniqueId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<int>("TrackUniqueId");

                    b.HasKey("UniqueId");

                    b.HasIndex("CreateUserUniqueId");

                    b.HasIndex("PlaylistUniqueId");

                    b.HasIndex("TrackUniqueId");

                    b.ToTable("PlaylistEntry");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.PlaylistPermission", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanModify");

                    b.Property<int>("PlaylistUniqueId");

                    b.Property<int>("UserUniqueId");

                    b.HasKey("UniqueId");

                    b.HasIndex("PlaylistUniqueId");

                    b.HasIndex("UserUniqueId");

                    b.ToTable("PlaylistPermission");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzAliasMusicBrainzRecord", b =>
                {
                    b.Property<int>("MusicBrainzAliasUniqueId")
                        .HasColumnName("MusicBrainzAlias_UniqueId");

                    b.Property<int>("MusicBrainzRecordUniqueId")
                        .HasColumnName("MusicBrainzRecord_UniqueId");

                    b.HasKey("MusicBrainzAliasUniqueId", "MusicBrainzRecordUniqueId");

                    b.HasIndex("MusicBrainzRecordUniqueId");

                    b.ToTable("MusicBrainzAliasMusicBrainzRecord");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzArtistCreditMusicBrainzRecord", b =>
                {
                    b.Property<int>("MusicBrainzArtistCreditUniqueId")
                        .HasColumnName("MusicBrainzArtistCredit_UniqueId");

                    b.Property<int>("MusicBrainzRecordUniqueId")
                        .HasColumnName("MusicBrainzRecord_UniqueId");

                    b.HasKey("MusicBrainzArtistCreditUniqueId", "MusicBrainzRecordUniqueId");

                    b.HasIndex("MusicBrainzRecordUniqueId");

                    b.ToTable("MusicBrainzArtistCreditMusicBrainzRecord");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzArtistMusicBrainzAlias", b =>
                {
                    b.Property<int>("MusicBrainzAliasUniqueId")
                        .HasColumnName("MusicBrainzAlias_UniqueId");

                    b.Property<int>("MusicBrainzArtistUniqueId")
                        .HasColumnName("MusicBrainzArtist_UniqueId");

                    b.HasKey("MusicBrainzAliasUniqueId", "MusicBrainzArtistUniqueId");

                    b.HasIndex("MusicBrainzArtistUniqueId");

                    b.ToTable("MusicBrainzArtistMusicBrainzAlias");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzIsoCodeMusicBrainzArea", b =>
                {
                    b.Property<int>("MusicBrainzIsoCodeUniqueId")
                        .HasColumnName("MusicBrainzIsoCode_UniqueId");

                    b.Property<int>("MusicBrainzAreaUniqueId")
                        .HasColumnName("MusicBrainzArea_UniqueId");

                    b.HasKey("MusicBrainzIsoCodeUniqueId", "MusicBrainzAreaUniqueId");

                    b.HasIndex("MusicBrainzAreaUniqueId");

                    b.ToTable("MusicBrainzIsoCodeMusicBrainzArea");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzRecordAcoustId", b =>
                {
                    b.Property<int>("MusicBrainzRecordUniqueId")
                        .HasColumnName("MusicBrainzRecord_UniqueId");

                    b.Property<int>("AcoustIdUniqueId")
                        .HasColumnName("AcoustId_UniqueId");

                    b.HasKey("MusicBrainzRecordUniqueId", "AcoustIdUniqueId");

                    b.HasIndex("AcoustIdUniqueId");

                    b.ToTable("MusicBrainzRecordAcoustId");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzReleaseEventMusicBrainzRelease", b =>
                {
                    b.Property<int>("MusicBrainzReleaseUniqueId")
                        .HasColumnName("MusicBrainzRelease_UniqueId");

                    b.Property<int>("MusicBrainzReleaseEventUniqueId")
                        .HasColumnName("MusicBrainzReleaseEvent_UniqueId");

                    b.HasKey("MusicBrainzReleaseUniqueId", "MusicBrainzReleaseEventUniqueId");

                    b.HasIndex("MusicBrainzReleaseEventUniqueId");

                    b.ToTable("MusicBrainzReleaseEventMusicBrainzRelease");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzReleaseMusicBrainzAlias", b =>
                {
                    b.Property<int>("MusicBrainzReleaseUniqueId")
                        .HasColumnName("MusicBrainzRelease_UniqueId");

                    b.Property<int>("MusicBrainzAliasUniqueId")
                        .HasColumnName("MusicBrainzAlias_UniqueId");

                    b.HasKey("MusicBrainzReleaseUniqueId", "MusicBrainzAliasUniqueId");

                    b.HasIndex("MusicBrainzAliasUniqueId");

                    b.ToTable("MusicBrainzReleaseMusicBrainzAlias");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzReleaseMusicBrainzArtistCredit", b =>
                {
                    b.Property<int>("MusicBrainzReleaseUniqueId")
                        .HasColumnName("MusicBrainzRelease_UniqueId");

                    b.Property<int>("MusicBrainzArtistCreditUniqueId")
                        .HasColumnName("MusicBrainzArtistCredit_UniqueId");

                    b.HasKey("MusicBrainzReleaseUniqueId", "MusicBrainzArtistCreditUniqueId");

                    b.HasIndex("MusicBrainzArtistCreditUniqueId");

                    b.ToTable("MusicBrainzReleaseMusicBrainzArtistCredit");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzReleaseMusicBrainzRecord", b =>
                {
                    b.Property<int>("MusicBrainzReleaseUniqueId")
                        .HasColumnName("MusicBrainzRelease_UniqueId");

                    b.Property<int>("MusicBrainzRecordUniqueId")
                        .HasColumnName("MusicBrainzRecord_UniqueId");

                    b.HasKey("MusicBrainzReleaseUniqueId", "MusicBrainzRecordUniqueId");

                    b.HasIndex("MusicBrainzRecordUniqueId");

                    b.ToTable("MusicBrainzReleaseMusicBrainzRecord");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzTagMusicBrainzRecord", b =>
                {
                    b.Property<int>("MusicBrainzTagUniqueId")
                        .HasColumnName("MusicBrainzTag_UniqueId");

                    b.Property<int>("MusicBrainzRecordUniqueId")
                        .HasColumnName("MusicBrainzRecord_UniqueId");

                    b.HasKey("MusicBrainzTagUniqueId", "MusicBrainzRecordUniqueId");

                    b.HasIndex("MusicBrainzRecordUniqueId");

                    b.ToTable("MusicBrainzTagMusicBrainzRecord");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.Track", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AcoustIdApiError");

                    b.Property<int?>("AcoustIdApiErrorCode");

                    b.Property<double?>("Duration");

                    b.Property<string>("Fingerprint");

                    b.Property<string>("FingerprintError");

                    b.Property<string>("FingerprintHash")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("LastAcoustIdApiCall");

                    b.Property<DateTime?>("LastFingerprintCalculation");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(2048);

                    b.HasKey("UniqueId");

                    b.HasIndex("FingerprintHash");

                    b.HasIndex("LastAcoustIdApiCall");

                    b.HasIndex("LastFingerprintCalculation");

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("Track");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.User", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanInvite");

                    b.Property<int?>("InviteUniqueId");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("UniqueId");

                    b.HasIndex("InviteUniqueId")
                        .IsUnique()
                        .HasFilter("[InviteUniqueId] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.AcoustIdResult", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.AcoustId", "AcoustId")
                        .WithMany("AcoustIdResults")
                        .HasForeignKey("AcoustId_UniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.Track", "Track")
                        .WithMany("AcoustIdResults")
                        .HasForeignKey("Track_UniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.Invite", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.User", "CreateUser")
                        .WithMany("Invites")
                        .HasForeignKey("CreateUserUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzArtistCredit", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzArtist", "Artist")
                        .WithMany("Credits")
                        .HasForeignKey("Artist_UniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzRelease", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzTextRepresentation", "TextRepresentation")
                        .WithMany("Releases")
                        .HasForeignKey("TextRepresentation_UniqueId");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.MusicBrainzReleaseEvent", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzArea", "Area")
                        .WithMany("ReleaseEvents")
                        .HasForeignKey("Area_UniqueId");
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.Playlist", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.User", "CreateUser")
                        .WithMany("Playlists")
                        .HasForeignKey("CreateUserUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.PlaylistEntry", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.User", "CreateUser")
                        .WithMany("PlaylistEntries")
                        .HasForeignKey("CreateUserUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.Playlist", "Playlist")
                        .WithMany("PlaylistEntries")
                        .HasForeignKey("PlaylistUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.Track", "Track")
                        .WithMany("PlaylistEntries")
                        .HasForeignKey("TrackUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.PlaylistPermission", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.Playlist", "Playlist")
                        .WithMany("PlaylistPermissions")
                        .HasForeignKey("PlaylistUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.User", "User")
                        .WithMany("PlaylistPermissions")
                        .HasForeignKey("UserUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzAliasMusicBrainzRecord", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzAlias", "MusicBrainzAlias")
                        .WithMany("MusicBrainzAliasMusicBrainzRecords")
                        .HasForeignKey("MusicBrainzAliasUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzRecord", "MusicBrainzRecord")
                        .WithMany("MusicBrainzAliasMusicBrainzRecords")
                        .HasForeignKey("MusicBrainzRecordUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzArtistCreditMusicBrainzRecord", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzArtistCredit", "MusicBrainzArtistCredit")
                        .WithMany("MusicBrainzArtistCreditMusicBrainzRecords")
                        .HasForeignKey("MusicBrainzArtistCreditUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzRecord", "MusicBrainzRecord")
                        .WithMany("MusicBrainzArtistCreditMusicBrainzRecords")
                        .HasForeignKey("MusicBrainzRecordUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzArtistMusicBrainzAlias", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzAlias", "MusicBrainzAlias")
                        .WithMany("MusicBrainzArtistMusicBrainzAliases")
                        .HasForeignKey("MusicBrainzAliasUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzArtist", "MusicBrainzArtist")
                        .WithMany("MusicBrainzArtistMusicBrainzAliases")
                        .HasForeignKey("MusicBrainzArtistUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzIsoCodeMusicBrainzArea", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzArea", "MusicBrainzArea")
                        .WithMany("MusicBrainzIsoCodeMusicBrainzAreas")
                        .HasForeignKey("MusicBrainzAreaUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzIsoCode", "MusicBrainzIsoCode")
                        .WithMany("MusicBrainzIsoCodeMusicBrainzAreas")
                        .HasForeignKey("MusicBrainzIsoCodeUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzRecordAcoustId", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.AcoustId", "AcoustId")
                        .WithMany("MusicBrainzRecordAcoustIds")
                        .HasForeignKey("AcoustIdUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzRecord", "MusicBrainzRecord")
                        .WithMany("MusicBrainzRecordAcoustIds")
                        .HasForeignKey("MusicBrainzRecordUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzReleaseEventMusicBrainzRelease", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzReleaseEvent", "MusicBrainzReleaseEvent")
                        .WithMany("MusicBrainzReleaseEventMusicBrainzReleases")
                        .HasForeignKey("MusicBrainzReleaseEventUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzRelease", "MusicBrainzRelease")
                        .WithMany("MusicBrainzReleaseEventMusicBrainzReleases")
                        .HasForeignKey("MusicBrainzReleaseUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzReleaseMusicBrainzAlias", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzAlias", "MusicBrainzAlias")
                        .WithMany("MusicBrainzReleaseMusicBrainzAliases")
                        .HasForeignKey("MusicBrainzAliasUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzRelease", "MusicBrainzRelease")
                        .WithMany("MusicBrainzReleaseMusicBrainzAliases")
                        .HasForeignKey("MusicBrainzReleaseUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzReleaseMusicBrainzArtistCredit", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzArtistCredit", "MusicBrainzArtistCredit")
                        .WithMany("MusicBrainzReleaseMusicBrainzArtistCredits")
                        .HasForeignKey("MusicBrainzArtistCreditUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzRelease", "MusicBrainzRelease")
                        .WithMany("MusicBrainzReleaseMusicBrainzArtistCredits")
                        .HasForeignKey("MusicBrainzReleaseUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzReleaseMusicBrainzRecord", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzRecord", "MusicBrainzRecord")
                        .WithMany("MusicBrainzReleaseMusicBrainzRecords")
                        .HasForeignKey("MusicBrainzRecordUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzRelease", "MusicBrainzRelease")
                        .WithMany("MusicBrainzReleaseMusicBrainzRecords")
                        .HasForeignKey("MusicBrainzReleaseUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.shadowentities.MusicBrainzTagMusicBrainzRecord", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzRecord", "MusicBrainzRecord")
                        .WithMany("MusicBrainzTagMusicBrainzRecords")
                        .HasForeignKey("MusicBrainzRecordUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ch.wuerth.tobias.mux.Data.models.MusicBrainzTag", "MusicBrainzTag")
                        .WithMany("MusicBrainzTagMusicBrainzRecords")
                        .HasForeignKey("MusicBrainzTagUniqueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ch.wuerth.tobias.mux.Data.models.User", b =>
                {
                    b.HasOne("ch.wuerth.tobias.mux.Data.models.Invite", "Invite")
                        .WithOne("RegisteredUser")
                        .HasForeignKey("ch.wuerth.tobias.mux.Data.models.User", "InviteUniqueId");
                });
#pragma warning restore 612, 618
        }
    }
}
